#version 460 core
#extension GL_KHR_shader_subgroup_arithmetic : require

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r8ui) restrict readonly uniform uimage2D inData;

layout(binding = 0) coherent restrict buffer OutData {
    uint minDepth;
}
outData;

layout(location = 0) uniform uvec2 readSize;

void main() {
    const uint tidx = gl_LocalInvocationIndex;
    bool inBounds = all(lessThan(gl_GlobalInvocationID.xy, readSize));
    uint work = inBounds ? imageLoad(inData, ivec2(gl_GlobalInvocationID.xy)).r : -1U;
    work = subgroupMin(work);

    if (subgroupElect()) {
        atomicMin(outData.minDepth, work);
    }
}
