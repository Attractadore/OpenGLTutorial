#version 460 core
#extension GL_KHR_shader_subgroup_arithmetic : require

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rg16) restrict readonly uniform image2D inData;

layout(binding = 0) coherent restrict buffer OutData {
    uint minDepth;
    uint maxDepth;
}
outData;

layout(location = 0) uniform uvec2 readSize;

void main() {
    const uint tidx = gl_LocalInvocationIndex;
    bool inBounds = all(lessThan(gl_GlobalInvocationID.xy, readSize));
    vec2 work = inBounds ? imageLoad(inData, ivec2(gl_GlobalInvocationID.xy)).rg : vec2(1.0f, 0.0f);
    work.x = subgroupMin(work.x);
    work.y = subgroupMax(work.y);

    if (subgroupElect()) {
        atomicMin(outData.minDepth, uint(((1 << 16) - 1) * work.x));
        atomicMax(outData.maxDepth, uint(((1 << 16) - 1) * work.y));
    }
}
